<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security ">
    <tx:http access-denied-page="/accessDenied.jsp">
        <tx:form-login login-page="/login.jsp"/>
        <tx:intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
        <tx:intercept-url pattern="/*" access="ROLE_USER"/>
        <tx:session-management>
            <tx:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </tx:session-management>
        <tx:custom-filter ref="nqhFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
    </tx:http>

    <!--一个自定义的filter，必须包含 authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
        我们的所有控制将在这三个类中实现，解释详见具体配置-->
    <bean class="com.gxx.nqh.filter.NQHFilterSecurityInterceptor" id="nqhFilterSecurityInterceptor">
        <property name="accessDecisionManager" ref="nqhAccessDecisionManager"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="securityMetadataSource" ref="nqhInvocationSecurityMetadataSource"/>
    </bean>


    <!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <tx:authentication-manager alias="authenticationManager">
        <tx:authentication-provider user-service-ref="nqhUserDetailService"/>
        <!--如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
    </tx:authentication-manager>
    <!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
    <bean id="nqhUserDetailService" class="com.gxx.nqh.service.NQHUserDetailService"/>

    <!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <bean id="nqhAccessDecisionManager" class="com.gxx.nqh.service.NQHAccessDecisionManager">
    </bean>
    <!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
    <bean id="nqhInvocationSecurityMetadataSource" class="com.gxx.nqh.service.NQHInvocationSecurityMetadataSource"/>
</beans>